openapi: 3.0.0
info:
  title: Interview API
  description: API for interview
  version: 1.0.0
paths:
  /api/v1/create-user:
    post:
      operationId: createUserLambda
      summary: Create a new user
      description: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateUserRequest"
      responses:
        "200":
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateUserResponse"
        "400":
          description: Bad request
        "500":
          description: Internal server error
  /api/v1/update-user:
    put:
      operationId: updateUserLambda
      summary: Update user
      description: Update user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateUserRequest"
      responses:
        "200":
          description: User updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateUserResponse"
        "400":
          description: Bad request
        "404":
          description: User not found
        "500":
          description: Internal server error
  /api/v1/delete-user/{id}:
    delete:
      operationId: deleteUserLambda
      summary: Delete user
      description: Delete user
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: User deleted successfully
        "404":
          description: User not found
        "500":
          description: Internal server error
  /api/v1/get-users:
    get:
      operationId: queriesGetAllLambda
      summary: Get all users
      description: Get all users
      responses:
        "200":
          description: A list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        "500":
          description: Internal server error
components:
  schemas:
    CreateUserRequest:
      type: object
      properties:
        name:
          type: string
          description: User's first name
        lastName:
          type: string
          description: User's last name
        email:
          type: string
          format: email
          description: User's email address
        birthday:
          type: string
          format: date
          description: User's date of birth
        genre:
          type: string
          enum: [male, female, other]
          description: User's gender
      required:
        - name
        - lastName
        - email
        - birthday
        - genre
    CreateUserResponse:
      type: object
      properties:
        id:
          type: string
          description: User ID
        name:
          type: string
          description: User's first name
        lastName:
          type: string
          description: User's last name
        email:
          type: string
          format: email
          description: User's email address
        birthday:
          type: string
          format: date
          description: User's date of birth
        genre:
          type: string
          enum: [male, female, other]
          description: User's gender
    UpdateUserRequest:
      type: object
      properties:
        name:
          type: string
          description: User's first name
        lastName:
          type: string
          description: User's last name
        email:
          type: string
          format: email
          description: User's email address
        birthday:
          type: string
          format: date
          description: User's date of birth
        genre:
          type: string
          enum: [male, female, other]
          description: User's gender
      required:
        - name
        - lastName
        - email
        - birthday
        - genre
    UpdateUserResponse:
      type: object
      properties:
        id:
          type: string
          description: User ID
        name:
          type: string
          description: User's first name
        lastName:
          type: string
          description: User's last name
        email:
          type: string
          format: email
          description: User's email address
        birthday:
          type: string
          format: date
          description: User's date of birth
        genre:
          type: string
          enum: [male, female, other]
          description: User's gender
    User:
      type: object
      properties:
        id:
          type: string
          description: User ID
        name:
          type: string
          description: User's first name
        lastName:
          type: string
          description: User's last name
        email:
          type: string
          format: email
          description: User's email address
        birthday:
          type: string
          format: date
          description: User's date of birth
        genre:
          type: string
          enum: [male, female, other]
          description: User's gender
