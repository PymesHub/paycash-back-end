// this file was generated by serverless-auto-swagger
            module.exports = {
  "swagger": "2.0",
  "info": {
    "title": "interview-api-serverless",
    "version": "1"
  },
  "paths": {
    "/api/v1/create-user": {
      "post": {
        "summary": "createUserLambda",
        "description": "",
        "operationId": "createUserLambda.post./api/v1/create-user",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "200 response"
          }
        }
      }
    },
    "/api/v1/update-user": {
      "put": {
        "summary": "updateUserLambda",
        "description": "",
        "operationId": "updateUserLambda.put./api/v1/update-user",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "200 response"
          }
        }
      }
    },
    "/api/v1/delete-user/{id}": {
      "delete": {
        "summary": "deleteUserLambda",
        "description": "",
        "operationId": "deleteUserLambda.delete./api/v1/delete-user/{id}",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "200 response"
          }
        }
      }
    },
    "/api/v1/get-users": {
      "get": {
        "summary": "queriesGetAllLambda",
        "description": "",
        "operationId": "queriesGetAllLambda.get./api/v1/get-users",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "200 response"
          }
        }
      }
    }
  },
  "definitions": {
    "CreateCommand": {
      "properties": {
        "name": {
          "title": "CreateCommand.name",
          "type": "string"
        },
        "lastName": {
          "title": "CreateCommand.lastName",
          "type": "string"
        },
        "email": {
          "title": "CreateCommand.email",
          "type": "string"
        },
        "birthday": {
          "title": "CreateCommand.birthday",
          "type": "string"
        },
        "genre": {
          "enum": [
            "male",
            "female",
            "other"
          ],
          "title": "CreateCommand.genre",
          "type": "string"
        }
      },
      "required": [
        "name",
        "lastName",
        "email",
        "birthday",
        "genre"
      ],
      "additionalProperties": false,
      "title": "CreateCommand",
      "description": "@openapi components:\n  schemas:\n    CreateCommand:\n      type: object\n      properties:\n        name:\n          type: string\n          description: Nombre del usuario.\n          example: \"John\"\n        lastName:\n          type: string\n          description: Apellido del usuario.\n          example: \"Doe\"\n        email:\n          type: string\n          format: email\n          description: Correo electrónico del usuario.\n          example: \"john.doe@example.com\"\n        birthday:\n          type: string\n          format: date\n          description: Fecha de nacimiento del usuario (YYYY-MM-DD).\n          example: \"1990-01-01\"\n        genre:\n          type: string\n          enum: [male, female, other]\n          description: Género del usuario.\n          example: \"male\"",
      "type": "object"
    }
  },
  "securityDefinitions": {}
};